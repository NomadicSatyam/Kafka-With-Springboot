pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Clone Code') {
            steps {
                echo 'Cloning The Code ...'
                git url: "https://github.com/NomadicSatyam/Kafka-With-Springboot.git", branch: "dev"
            }
        }

        stage('MVN Build') {
            steps {
                script {
                    // Move to each project directory and run Maven build
                    dir('deliveryboyapp') {
                        sh 'mvn clean package'
                    }
                    dir('enduser') {
                        sh 'mvn clean package'
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE_DELIVERYBOY = "satyambrother/kafka-deliveryboyapp:${BUILD_NUMBER}"
                DOCKER_IMAGE_ENDUSER = "satyambrother/kafka-enduser:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('dockerHub')
            }
            steps {
                script {
                    // Build and push the Docker image for 'deliveryboyapp'
                    dir('deliveryboyapp') {
                        sh "docker build -t ${DOCKER_IMAGE_DELIVERYBOY} ."
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerHub') {
                            sh "docker push ${DOCKER_IMAGE_DELIVERYBOY}"
                        }
                    }

                    // Build and push the Docker image for 'enduser'
                    dir('enduser') {
                        sh "docker build -t ${DOCKER_IMAGE_ENDUSER} ."
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerHub') {
                            sh "docker push ${DOCKER_IMAGE_ENDUSER}"
                        }
                    }
                }
            }
        }

    //     stage('Update Deployment File') {
    //         environment {
    //             GIT_REPO_NAME = "Kubernetes-Manifests-Collections"
    //             GIT_USER_NAME = "NomadicSatyam"
    //         }
    //         steps {
    //             script {
    //                 withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
    //                     dir('Kafka-With-Springboot') {
    //                         sh '''
    //                             git config user.email "satyamm1998@gmail.com"
    //                             git config user.name "Satyam Singh"
    //                             sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
    //                             git add deployment.yml
    //                             git commit -m "Update deployment image to version ${BUILD_NUMBER}"
    //                             git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:dev
    //                         '''
    //                     }
    //                 }
    //             }
    //         }
    //     }
    // }
}}
